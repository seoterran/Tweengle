/*!
 *  opentok-angular (https://github.com/aullman/OpenTok-Angular)
 *
 *  Angular module for OpenTok
 *
 *  @Author: Adam Ullman (http://github.com/aullman)
 *  @Copyright (c) 2014 Adam Ullman
 *  @License: Released under the MIT license (http://opensource.org/licenses/MIT)
 **/
if(!window.OT)throw new Error("You must include the OT library before the OT_Angular library");angular.module("opentok",[]).factory("OT",function(){return OT}).factory("OTSession",["OT","$rootScope",function(e,n){var i={streams:[],connections:[],publishers:[],init:function(t,s,o,r){this.session=e.initSession(t,s),i.session.on({sessionConnected:function(){i.publishers.forEach(function(e){i.session.publish(e)})},streamCreated:function(e){n.$apply(function(){i.streams.push(e.stream)})},streamDestroyed:function(e){n.$apply(function(){i.streams.splice(i.streams.indexOf(e.stream),1)})},sessionDisconnected:function(){n.$apply(function(){i.streams.splice(0,i.streams.length),i.connections.splice(0,i.connections.length)})},connectionCreated:function(e){n.$apply(function(){i.connections.push(e.connection)})},connectionDestroyed:function(e){n.$apply(function(){i.connections.splice(i.connections.indexOf(e.connection),1)})}}),this.session.connect(o,function(e){r&&r(e,i.session)}),this.trigger("init")}};return e.$.eventing(i),i}]).directive("otLayout",["$window","$parse","OT","OTSession",function(e,n,i,t){return{restrict:"E",link:function(i,s,o){var r=n(o.props)(),c=initLayoutContainer(s[0],r),u=function(){c.layout(),i.$emit("otLayoutComplete")};i.$watch(function(){return s.children().length},u),e.addEventListener("resize",u),i.$on("otLayout",u);var a=function(){t.session.on("streamPropertyChanged",function(e){"videoDimensions"===e.changedProperty&&u()})};t.session?a():t.on("init",a)}}}]).directive("otPublisher",["OTSession",function(e){return{restrict:"E",scope:{props:"&"},link:function(n,i,t){var s=n.props()||{};s.width=s.width?s.width:angular.element(i).width(),s.height=s.height?s.height:angular.element(i).height();var o=angular.element(i).children();n.publisher=OT.initPublisher(t.apikey||e.session.apiKey,i[0],s,function(e){e&&n.$emit("otPublisherError",e,n.publisher)}),angular.element(i).append(o),n.publisher.on({accessDenied:function(){n.$emit("otAccessDenied")},accessDialogOpened:function(){n.$emit("otAccessDialogOpened")},accessDialogClosed:function(){n.$emit("otAccessDialogClosed")},accessAllowed:function(){angular.element(i).addClass("allowed"),n.$emit("otAccessAllowed")},loaded:function(){n.$emit("otLayout")},streamCreated:function(){n.$emit("otStreamCreated")},streamDestroyed:function(){n.$emit("otStreamDestroyed")}}),n.$on("$destroy",function(){e.session?e.session.unpublish(n.publisher):n.publisher.destroy(),e.publishers=e.publishers.filter(function(e){return e!==n.publisher}),n.publisher=null}),e.session&&(e.session.connected||e.session.isConnected&&e.session.isConnected())&&e.session.publish(n.publisher,function(e){e&&n.$emit("otPublisherError",e,n.publisher)}),e.publishers.push(n.publisher)}}}]).directive("otSubscriber",["OTSession",function(e){return{restrict:"E",scope:{stream:"=",props:"&"},link:function(n,i){var t=n.stream,s=n.props()||{};s.width=s.width?s.width:angular.element(i).width(),s.height=s.height?s.height:angular.element(i).height();var o=angular.element(i).children(),r=e.session.subscribe(t,i[0],s,function(e){e&&n.$emit("otSubscriberError",e,r)});r.on("loaded",function(){n.$emit("otLayout")}),angular.element(i).append(o),n.$on("$destroy",function(){e.session.unsubscribe(r)})}}}]);